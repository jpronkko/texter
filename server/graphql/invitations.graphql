enum InvitationStatus {
  PENDING
  ACCEPTED
  CANCELLED
  REJECTED
}

type Invitation {
  id: ID!
  fromUser: ID!
  toUser: ID!
  status: InvitationStatus
  sentTime: String!
}

input InvitationInput {
  groupId: ID!
  fromUser: ID!
  toUser: ID!
}

type Query {
  allInvitations: [Invitation]
  getReceivedInvitations: [Invitation]
  getSentInvitations(fromUserId: ID!): [Invitation]
}

type Mutation {
  createInvitation(invitation: InvitationInput): Invitation
  changeInvitationStatus(id: ID!, status: InvitationStatus): Invitation
}

type Subscription {
  invitationAdded(toUserId: ID!): Invitation
  invitationStatusChanged(userId: ID!, invitationId: ID!): Invitation
}