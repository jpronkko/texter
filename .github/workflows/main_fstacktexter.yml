name: Build and deploy fstacktexter nodejs app to Azure Web App - fstacktexter

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

env:
  PROD_MONGODB_URI: ${{ secrets.PROD_MONGODB_URI }}
  TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
  SECRET: ${{ secrets.SECRET }}
  PORT: ${{ vars.PORT }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm install
      - name: lint
        run: npm run eslint

      - name: UI component test
        run: npm run component-test

      #- name: Build
      #  run: npm run build

      - name: API test
        run: npm run api-test

      - name: e2e test
        uses: cypress-io/github-action@v6

        with:
          working-directory: ./server

          #   command: npm run e2e-test
          build: npm run build
          #start: npm run start:test
          start: npm run test_mode
          browser: chrome
          wait-on: http://localhost:8080
          record: true
          # parallel: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REACT_APP_API_ENDPOINT: ${{ vars.REACT_APP_API_ENDPOINT }}
          REACT_APP_WS_ENDPOINT: ${{ vars.REACT_APP_WS_ENDPOINT }}

      - name: Zip artifact for deployment
        run: cd ./server && zip release.zip ./* -r && mv release.zip ../

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: fstacktexter
          path: release.zip

  deploy:
    needs: [build_and_test]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest

    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: fstacktexter

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "fstacktexter"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E0EAFB1527F7414CBC36DF7107BBFF4B }}
          package: .
